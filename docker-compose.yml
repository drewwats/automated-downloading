# version: "3.6"

networks:
  media:
    driver: bridge

# See /Docker/.env to configure environmental variables

services:
  gluetun:
    image: qmcgaw/private-internet-access:latest
    container_name: gluetun
    hostname: gluetun
    cap_add:
      - NET_ADMIN
    network_mode: bridge
    ports:
      # Gluetun ports
      - 7654:8888/tcp # HTTP proxy
      - 7655:8388/tcp # Shadowsocks
      - 7656:8388/udp # Shadowsocks
      - 7657:8000/tcp # Built-in HTTP control server
      # Other containers' ports
      - ${SABNZBD_PORT}:8080
      - ${DELUGE_PORT}:${DELUGE_PORT}
      - ${QBITTORRENT_PORT}:${QBITTORRENT_PORT}
      - ${TRANSMISSION_PORT}:${TRANSMISSION_PORT}
      - ${PROWLARR_PORT}:${PROWLARR_PORT}
      - ${SONARR_PORT}:${SONARR_PORT}
      - ${RADARR_PORT}:${RADARR_PORT}
      - ${BAZARR_PORT}:${BAZARR_PORT}
      - ${LIDARR_PORT}:${LIDARR_PORT}
      - ${FLARESOLVERR_PORT}:${FLARESOLVERR_PORT}
    volumes:
      - ${GLUETUN_HOME}:/gluetun
    environment:
      - TZ=${TIME_ZONE}
      - FIREWALL_OUTBOUND_SUBNETS=${LOCAL_CIDR}
      # VPN VIA PIA
      - VPN_SERVICE_PROVIDER=private internet access
      - PRIVATE_INTERNET_ACCESS_OPENVPN_ENCRYPTION_PRESET=strong
      - OPENVPN_USER=${VPN_USER}
      - OPENVPN_PASSWORD=${VPN_PASS}
      - SERVER_REGIONS=${VPN_REGION}
      - VPN_PORT_FORWARDING=on
      - HTTPPROXY=on
      - SHADOWSOCKS=on
      - SHADOWSOCKS_PASSWORD=${VPN_SOCKS_PASS}
      # DNS VIA UNBOUND https://github.com/qdm12/gluetun-wiki/blob/main/setup/options/dns.md
      - DOT=on
      - DNS_UPDATE_PERIOD=1h
      - BLOCK_MALICIOUS=on
      - BLOCK_SURVEILLANCE=on
      - BLOCK_ADS=on
    restart: unless-stopped

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    network_mode: "service:gluetun"
    depends_on:
      - gluetun
      - sabnzbd
      - transmission
      - sonarr
      - radarr
    environment:
      - PUID=0
      - PGID=0
      - TZ=${TIME_ZONE}
    volumes:
      - ${PROWLARR_HOME}:/config:rw
      - ${PROWLARR_HOME}hosts:/etc/hosts
    restart: unless-stopped

  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    network_mode: "service:gluetun"
    depends_on:
      - gluetun
    environment:
      - PUID=0
      - PGID=0
      - TZ=${TIME_ZONE}
    volumes:
      - ${SABNZBD_HOME}:/config
      - ${DOWNLOAD_BASE}/complete/:/downloads/complete:rw
      - ${DOWNLOAD_BASE}/incomplete/usenet/:/downloads/incomplete:rw
    restart: unless-stopped

  transmission:
    image: lscr.io/linuxserver/transmission:latest
    container_name: transmission
    network_mode: "service:gluetun"
    environment:
      - PUID=0
      - PGID=0
      - TZ=${TIME_ZONE}
      - TRANSMISSION_WEB_HOME=/config/flood-for-transmission/
      - USER=${RPC_USER}
      - PASS=${RPC_PASS}
    volumes:
      - ${TRANSMISSION_HOME}:/config
      - ${TRANSMISSION_HOME}/watch:/watch
      - ${DOWNLOAD_BASE}:/downloads
    restart: unless-stopped

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    network_mode: "service:gluetun"
    depends_on:
      - gluetun
    environment:
      - PUID=0
      - PGID=0
      - TZ=${TIME_ZONE}
    volumes:
      - ${SONARR_HOME}:/config:rw
      - ${TV_DIR}:/tv:rw
      - ${TV_REQ_DIR}:/requests:rw
      - ${DOWNLOAD_BASE}/complete/TV/:/downloads/complete/TV:rw
      - ${DOWNLOAD_BASE}/trash/:/downloads/trash:rw
    restart: unless-stopped

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    network_mode: "service:gluetun"
    depends_on:
      - gluetun
    environment:
      - PUID=0
      - PGID=0
      - TZ=${TIME_ZONE}
    volumes:
      - ${RADARR_HOME}:/config:rw
      - ${MOVIE_DIR}:/movies:rw
      - ${MOVIE_REQ_DIR}:/requests:rw
      - ${DOWNLOAD_BASE}/complete/Movies/:/downloads/complete/Movies:rw
      - ${DOWNLOAD_BASE}/trash/:/downloads/trash:rw
    restart: unless-stopped

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    network_mode: "service:gluetun"
    depends_on:
      - sonarr
      - radarr
    environment:
      - PUID=0
      - PGID=0
      - UMASK_SET=022
      - TZ=${TIME_ZONE}
    volumes:
      - ${BAZARR_HOME}:/config:rw
      - ${MOVIE_DIR}:/movies:rw
      - ${TV_DIR}:/tv:rw
      - ${TV_REQ_DIR}:/requests/tv:rw
      - ${MOVIE_REQ_DIR}:/requests/movies:rw
    restart: unless-stopped

  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    network_mode: "service:gluetun"
    depends_on:
      - gluetun
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIME_ZONE}
    volumes:
      - ${LIDARR_HOME}:/config:rw
      - ${MUSIC_DIR}:/music:rw
      - ${DOWNLOAD_BASE}/complete/Music/:/downloads/complete/Music:rw
      - ${DOWNLOAD_BASE}/trash/:/downloads/trash:rw
    restart: unless-stopped

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    network_mode: "service:gluetun"
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=${TIME_ZONE}
    restart: unless-stopped

  tautulli:
    container_name: metrics
    image: tautulli/tautulli:latest
    networks:
      - media
    volumes:
      - ${METRICS_HOME}:/config
    environment:
      - PUID=0
      - PGID=0
      - TZ=${TIME_ZONE}
    ports:
      - "${METRICS_PORT}:8181/tcp"
    restart: unless-stopped


# Recover Corrupted Sonarr / Radarr DB
# https://wiki.servarr.com/useful-tools#recovering-a-corrupt-db
# From Macbook:
# docker stop radarr
# scp -O -P 2222 drew@<QNAP_IP>:/share/Container/homes/radarr/radarr.db ~/radarr.db
# mv ./radarr.db ./radarr_corrupt.db
# sqlite3 ./radarr_corrupt.db ".recover" | sqlite3 ./radarr.db
# scp -O -P 2222 ./radarr.db drew@<QNAP_IP>:/share/Container/homes/radarr/radarr.db
# rm ~/radarr_corrupt.db*
# docker start radarr
